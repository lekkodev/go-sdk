// Copyright 2022 Lekko Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package main

import (
	"context"
	"log"

	client "github.com/lekkodev/go-sdk/client"
)

func main() {
	// This will be generated by the lekko cli
	var staticFeatures = map[string]map[string][]byte{
		"default": {
			"enable-puppy-dance": {
				0x0a, 0x12, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x2d, 0x70, 0x75, 0x70, 0x70, 0x79, 0x2d, 0x64,
				0x61, 0x6e, 0x63, 0x65, 0x12, 0x15, 0x6d, 0x79, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20,
				0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x35, 0x0a, 0x33, 0x0a,
				0x2d, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x70, 0x69, 0x73,
				0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
				0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x02,
				0x08, 0x01, 0x20, 0x01,
			},
		},
	}
	var backupStaticFeatures = map[string]map[string][]byte{
		"default": {
			"enable-puppy-trance": {
				0x0a, 0x12, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x2d, 0x70, 0x75, 0x70, 0x70, 0x79, 0x2d, 0x64,
				0x61, 0x6e, 0x63, 0x65, 0x12, 0x15, 0x6d, 0x79, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20,
				0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x35, 0x0a, 0x33, 0x0a,
				0x2d, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x70, 0x69, 0x73,
				0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
				0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x02,
				0x08, 0x01, 0x20, 0x01,
			},
		},
	}
	primary, err := client.NewStaticProvider(staticFeatures)
	if err != nil {
		log.Fatalf("Error!: %s", err)
		return
	}
	backup, err := client.NewStaticProvider(backupStaticFeatures)
	if err != nil {
		log.Fatalf("Error!: %s", err)
		return
	}
	provider := client.FallbackProvider(primary, backup)
	cl, closeF := client.NewClient(provider)
	defer func() {
		_ = closeF(context.Background())
	}()
	ctx := context.Background()
	namespace := "default"
	config := "enable-puppy-dance"
	result, err := cl.GetBool(ctx, namespace, config)
	if err != nil {
		log.Fatalf("Error!: %s", err)
		return
	}
	log.Printf("%s/%s [%T]: %v\n", namespace, config, result, result)
	config = "enable-puppy-trance"
	result, err = cl.GetBool(ctx, namespace, config)
	if err != nil {
		log.Fatalf("Error!: %s", err)
		return
	}
	log.Printf("%s/%s [%T]: %v\n", namespace, config, result, result)
}
